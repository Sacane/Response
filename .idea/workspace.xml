<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="64af6c85-43f2-447b-9411-e7bb664b8d09" name="Changes" comment="Remove function in their right package">
      <change beforePath="$PROJECT_DIR$/Response/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/Response/.gitignore" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="verification" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ResponseMonad" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
                <item name="runtimeClasspath" type="62daadca:ExternalSystemViewDefaultContributor$DependencyScopeExternalSystemNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Sr2WLdOcUzP6iAQCFWrzEiiawb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/johan/Documents/dev/ResponseMonad/build.gradle.kts",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Gradle.ResponseMonad [test]">
    <configuration name="MapTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":Response:test" />
            <option value="--tests" />
            <option value="&quot;fr.sacane.response.functional.MapTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="MapTest.Ok response but empty should not be able to map" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":Response:test" />
            <option value="--tests" />
            <option value="&quot;fr.sacane.response.functional.MapTest.Ok response but empty should not be able to map&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="ResponseMonad [test]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="ResponseTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":Response:test" />
            <option value="--tests" />
            <option value="&quot;fr.sacane.response.ResponseTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="StatusTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":Response:test" />
            <option value="--tests" />
            <option value="&quot;fr.sacane.response.StatusTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>true</ForceTestExec>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.ResponseMonad [test]" />
        <item itemvalue="Gradle.StatusTest" />
        <item itemvalue="Gradle.MapTest.Ok response but empty should not be able to map" />
        <item itemvalue="Gradle.MapTest" />
        <item itemvalue="Gradle.ResponseTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="64af6c85-43f2-447b-9411-e7bb664b8d09" name="Changes" comment="" />
      <created>1689890414796</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689890414796</updated>
      <workItem from="1689890427093" duration="5482000" />
      <workItem from="1689923987884" duration="5587000" />
      <workItem from="1689929680717" duration="300000" />
      <workItem from="1689930010121" duration="90000" />
      <workItem from="1689930122910" duration="1194000" />
    </task>
    <task id="LOCAL-00001" summary="[FEAT] - add gradle for root project + split Error and Ok status into interface and open class instead of abstract class">
      <option name="closed" value="true" />
      <created>1689898049355</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689898049355</updated>
    </task>
    <task id="LOCAL-00002" summary="[FEAT] - add gradle for root project + split Error and Ok status into interface and open class instead of abstract class">
      <option name="closed" value="true" />
      <created>1689898097495</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689898097495</updated>
    </task>
    <task id="LOCAL-00003" summary="[FIX] - fixed test status">
      <option name="closed" value="true" />
      <created>1689898153232</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689898153232</updated>
    </task>
    <task id="LOCAL-00004" summary="[FIX] - replace check on success by check on permits class">
      <option name="closed" value="true" />
      <created>1689898384624</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689898384624</updated>
    </task>
    <task id="LOCAL-00005" summary="[FIX] - replace Status design by checking the isSuccess and failure values at runtime">
      <option name="closed" value="true" />
      <created>1689898832771</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689898832771</updated>
    </task>
    <task id="LOCAL-00006" summary="[FEAT] - Implemented HttpError as native Error">
      <option name="closed" value="true" />
      <created>1689924808044</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689924808044</updated>
    </task>
    <task id="LOCAL-00007" summary="[CORE] - Rework design of is Success and failure check">
      <option name="closed" value="true" />
      <created>1689926212128</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1689926212128</updated>
    </task>
    <task id="LOCAL-00008" summary="[FIX] - rework map function only if the value is Ok and present, put a default value if not">
      <option name="closed" value="true" />
      <created>1689926784377</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1689926784377</updated>
    </task>
    <task id="LOCAL-00009" summary="[FIX] - fixed test for mapping function">
      <option name="closed" value="true" />
      <created>1689927230601</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1689927230601</updated>
    </task>
    <task id="LOCAL-00010" summary="[FIX] - Throw unsupportedException when trying to map an EmptyOk Response Status">
      <option name="closed" value="true" />
      <created>1689928382852</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1689928382853</updated>
    </task>
    <task id="LOCAL-00011" summary="[FIX] - replace default Value when value is null and Ok (impossible to reach this state)">
      <option name="closed" value="true" />
      <created>1689928741783</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1689928741783</updated>
    </task>
    <task id="LOCAL-00012" summary="Add readme">
      <option name="closed" value="true" />
      <created>1689929347487</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1689929347487</updated>
    </task>
    <task id="LOCAL-00013" summary="add gitignore in root project">
      <option name="closed" value="true" />
      <created>1689929391152</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1689929391153</updated>
    </task>
    <task id="LOCAL-00014" summary="update readme">
      <option name="closed" value="true" />
      <created>1689929570638</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1689929570638</updated>
    </task>
    <task id="LOCAL-00015" summary="[CORE - Remove non safe use of isSuccess and isFailure methods">
      <option name="closed" value="true" />
      <created>1689930472017</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1689930472017</updated>
    </task>
    <task id="LOCAL-00016" summary="Add response requirement">
      <option name="closed" value="true" />
      <created>1689930880835</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1689930880835</updated>
    </task>
    <task id="LOCAL-00017" summary="Remove function in their right package">
      <option name="closed" value="true" />
      <created>1689931127703</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1689931127703</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[FEAT] - add gradle for root project + split Error and Ok status into interface and open class instead of abstract class" />
    <MESSAGE value="[FIX] - fixed test status" />
    <MESSAGE value="[FIX] - replace check on success by check on permits class" />
    <MESSAGE value="[FIX] - replace Status design by checking the isSuccess and failure values at runtime" />
    <MESSAGE value="[FEAT] - Implemented HttpError as native Error" />
    <MESSAGE value="[CORE] - Rework design of is Success and failure check" />
    <MESSAGE value="[FIX] - rework map function only if the value is Ok and present, put a default value if not" />
    <MESSAGE value="[FIX] - fixed test for mapping function" />
    <MESSAGE value="[FIX] - Throw unsupportedException when trying to map an EmptyOk Response Status" />
    <MESSAGE value="[FIX] - replace default Value when value is null and Ok (impossible to reach this state)" />
    <MESSAGE value="Add readme" />
    <MESSAGE value="add gitignore in root project" />
    <MESSAGE value="update readme" />
    <MESSAGE value="[CORE - Remove non safe use of isSuccess and isFailure methods" />
    <MESSAGE value="Add response requirement" />
    <MESSAGE value="Remove function in their right package" />
    <option name="LAST_COMMIT_MESSAGE" value="Remove function in their right package" />
  </component>
</project>